=================================
         Console output          
=================================
OUT: purity.p (9, 8): inferred type:  NIL
OUT: purity.p (9, 12): inferred type:  BaseType(BOOL)
OUT: purity.p (11, 11): inferred type:  NIL
OUT: purity.p (11, 18): inferred type:  BaseType(INT)
OUT: purity.p (15, 12): inferred type:  NIL
OUT: purity.p (15, 19): inferred type:  BaseType(INT)
OUT: purity.p (21, 8): inferred type:  NIL
OUT: purity.p (22, 8): inferred type:  NIL
OUT: purity.p (22, 15): inferred type:  BaseType(INT)
OUT: purity.p (27, 8): inferred type:  NIL
OUT: purity.p (27, 12): inferred type:  BaseType(INT)
OUT: purity.p (27, 19): inferred type:  BaseType(BOOL)
OUT: purity.p (27, 21): inferred type:  BaseType(INT)
OUT: purity.p (29, 11): inferred type:  NIL
OUT: purity.p (29, 18): inferred type:  BaseType(INT)
OUT: purity.p (29, 19): inferred type:  BaseType(INT)
OUT: purity.p (33, 11): inferred type:  NIL
OUT: purity.p (33, 18): inferred type:  BaseType(INT)
OUT: purity.p (39, 8): inferred type:  BaseType(BOOL)
OUT: purity.p (39, 8): inferred type:  NIL
OUT: purity.p (39, 12): inferred type:  BaseType(BOOL)
OUT: purity.p (40, 8): inferred type:  NIL
OUT: purity.p (40, 12): inferred type:  BaseType(BOOL)
OUT: purity.p (42, 11): inferred type:  NIL
OUT: purity.p (42, 18): inferred type:  BaseType(INT)
OUT: purity.p (46, 11): inferred type:  NIL
OUT: purity.p (46, 18): inferred type:  BaseType(INT)
OUT: purity.p (52, 8): inferred type:  BaseType(BOOL)
OUT: purity.p (52, 8): inferred type:  NIL
OUT: purity.p (52, 12): inferred type:  BaseType(BOOL)
OUT: purity.p (52, 19): inferred type:  BaseType(BOOL)
OUT: purity.p (52, 23): inferred type:  BaseType(INT)
OUT: purity.p (52, 30): inferred type:  BaseType(BOOL)
OUT: purity.p (52, 32): inferred type:  BaseType(INT)
OUT: purity.p (53, 8): inferred type:  NIL
OUT: purity.p (53, 12): inferred type:  BaseType(BOOL)
OUT: purity.p (55, 11): inferred type:  NIL
OUT: purity.p (55, 18): inferred type:  BaseType(INT)
OUT: purity.p (59, 11): inferred type:  NIL
OUT: purity.p (59, 18): inferred type:  BaseType(INT)
OUT: purity.p (65, 7): inferred type:  BaseType(INT)
OUT: purity.p (65, 7): inferred type:  NIL
OUT: purity.p (65, 11): inferred type:  BaseType(INT)
OUT: purity.p (65, 13): inferred type:  BaseType(INT)
OUT: purity.p (65, 15): inferred type:  BaseType(INT)
OUT: purity.p (66, 7): inferred type:  NIL
OUT: purity.p (66, 11): inferred type:  BaseType(INT)
OUT: purity.p (66, 13): inferred type:  BaseType(BOOL)
OUT: purity.p (66, 15): inferred type:  BaseType(INT)
OUT: purity.p (68, 10): inferred type:  NIL
OUT: purity.p (68, 17): inferred type:  BaseType(BOOL)
OUT: purity.p (72, 10): inferred type:  NIL
OUT: purity.p (72, 17): inferred type:  BaseType(BOOL)
OUT: purity.p (0, 0): No Main Machine
OUT: purity.p (2, 1): no start state in machine
OUT: purity.p (9, 12): this function must be pure. Data impure functions can only be called like "foo(...);" or "x = foo(...);"
OUT: purity.p (27, 12): this function must be pure. Data impure functions can only be called like "foo(...);" or "x = foo(...);"
OUT: purity.p (52, 12): this function must be pure. Data impure functions can only be called like "foo(...);" or "x = foo(...);"
OUT: purity.p (52, 23): this function must be pure. Data impure functions can only be called like "foo(...);" or "x = foo(...);"
OUT: Compilation failed
OUT: 
EXIT: -1
