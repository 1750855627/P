=================================
         Console output          
=================================
OUT: Writing stubs.c ...
OUT: Writing program.h ...
OUT: Writing program.c ...
OUT: Writing nonAtomicDataTypes.zing ...
OUT: Compiling nonAtomicDataTypes.zing to nonAtomicDataTypes.dll ...
OUT: nonatomicdatatypes.p (15, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (15, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (15, 7): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (15, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (15, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (15, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (15, 15): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (16, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (16, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (16, 13): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (16, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (16, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (16, 24): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (18, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (18, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (18, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (19, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (19, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (19, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (20, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (20, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (20, 7): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (20, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (20, 9): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (20, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (22, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (22, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (22, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (28, 8): inferred type:  NIL
OUT: nonatomicdatatypes.p (28, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (33, 9): inferred type:  NIL
OUT: nonatomicdatatypes.p (33, 16): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (38, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (38, 8): inferred type:  NIL
OUT: nonatomicdatatypes.p (38, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (38, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (38, 16): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (39, 8): inferred type:  NIL
OUT: nonatomicdatatypes.p (39, 15): inferred type:  BaseType(INT)
OUT: 
EXIT: 0
