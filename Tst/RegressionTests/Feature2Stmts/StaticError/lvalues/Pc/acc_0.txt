=================================
         Console output          
=================================
OUT: lvalues.p (10, 11): inferred type:  BaseType(INT)
OUT: lvalues.p (10, 11): inferred type:  NIL
OUT: lvalues.p (10, 15): inferred type:  BaseType(INT)
OUT: lvalues.p (11, 11): inferred type:  NIL
OUT: lvalues.p (11, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: lvalues.p (11, 13): inferred type:  SeqType(BaseType(INT))
OUT: lvalues.p (11, 14): inferred type:  BaseType(INT)
OUT: lvalues.p (11, 15): inferred type:  BaseType(INT)
OUT: lvalues.p (11, 24): inferred type:  BaseType(INT)
OUT: lvalues.p (12, 11): inferred type:  NIL
OUT: lvalues.p (12, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: lvalues.p (12, 18): inferred type:  SeqType(BaseType(INT))
OUT: lvalues.p (12, 19): inferred type:  BaseType(INT)
OUT: lvalues.p (12, 20): inferred type:  BaseType(INT)
OUT: lvalues.p (12, 29): inferred type:  BaseType(INT)
OUT: lvalues.p (13, 11): inferred type:  NIL
OUT: lvalues.p (13, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: lvalues.p (13, 13): inferred type:  SeqType(BaseType(INT))
OUT: lvalues.p (13, 14): inferred type:  BaseType(INT)
OUT: lvalues.p (13, 15): inferred type:  BaseType(INT)
OUT: lvalues.p (13, 24): inferred type:  BaseType(INT)
OUT: lvalues.p (14, 11): inferred type:  BaseType(INT)
OUT: lvalues.p (14, 11): inferred type:  NIL
OUT: lvalues.p (14, 15): inferred type:  BaseType(INT)
OUT: lvalues.p (20, 8): inferred type:  NIL
OUT: lvalues.p (20, 15): inferred type:  BaseType(INT)
OUT: lvalues.p (25, 9): inferred type:  NIL
OUT: lvalues.p (25, 16): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: lvalues.p (30, 8): inferred type:  BaseType(INT)
OUT: lvalues.p (30, 8): inferred type:  NIL
OUT: lvalues.p (30, 12): inferred type:  BaseType(INT)
OUT: lvalues.p (30, 14): inferred type:  BaseType(INT)
OUT: lvalues.p (30, 16): inferred type:  BaseType(INT)
OUT: lvalues.p (31, 8): inferred type:  NIL
OUT: lvalues.p (31, 15): inferred type:  BaseType(INT)
OUT: lvalues.p (0, 0): No Main Machine
OUT: lvalues.p (1, 1): no start state in machine
OUT: lvalues.p (10, 11): invalid LHS; must have the form LHS ::= var | LHS[expr] | LHS.name
OUT: lvalues.p (12, 11): invalid LHS; must have the form LHS ::= var | LHS[expr] | LHS.name
OUT: lvalues.p (13, 14): this function must be pure. Data impure functions can only be called like "foo(...);" or "x = foo(...);"
OUT: Compilation failed
OUT: 
EXIT: -1
