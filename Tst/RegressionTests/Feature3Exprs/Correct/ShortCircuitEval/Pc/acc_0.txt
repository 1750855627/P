=================================
         Console output          
=================================
OUT: Writing stubs.c ...
OUT: Writing program.h ...
OUT: Writing program.c ...
OUT: Writing ShortCircuitEval.zing ...
OUT: Compiling ShortCircuitEval.zing to ShortCircuitEval.dll ...
OUT: shortcircuiteval.p (28, 5): inferred type:  NIL
OUT: shortcircuiteval.p (28, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: shortcircuiteval.p (28, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: shortcircuiteval.p (29, 11): inferred type:  NIL
OUT: shortcircuiteval.p (29, 11): inferred type:  SeqType(BaseType(INT))
OUT: shortcircuiteval.p (29, 17): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: shortcircuiteval.p (29, 20): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (29, 20): inferred type:  TupType(BaseType(INT), NIL)
OUT: shortcircuiteval.p (30, 11): inferred type:  NIL
OUT: shortcircuiteval.p (30, 11): inferred type:  SeqType(BaseType(ANY))
OUT: shortcircuiteval.p (31, 11): inferred type:  NIL
OUT: shortcircuiteval.p (31, 17): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (32, 5): inferred type:  NIL
OUT: shortcircuiteval.p (32, 12): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (32, 22): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (33, 11): inferred type:  NIL
OUT: shortcircuiteval.p (34, 5): inferred type:  NIL
OUT: shortcircuiteval.p (34, 22): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (36, 5): inferred type:  NIL
OUT: shortcircuiteval.p (36, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: shortcircuiteval.p (36, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: shortcircuiteval.p (37, 5): inferred type:  NIL
OUT: shortcircuiteval.p (37, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: shortcircuiteval.p (37, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: shortcircuiteval.p (38, 5): inferred type:  NIL
OUT: shortcircuiteval.p (38, 14): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (38, 18): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (38, 21): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (39, 5): inferred type:  NIL
OUT: shortcircuiteval.p (39, 14): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (39, 18): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (39, 21): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (41, 5): inferred type:  NIL
OUT: shortcircuiteval.p (41, 11): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (42, 5): inferred type:  NIL
OUT: shortcircuiteval.p (46, 5): inferred type:  NIL
OUT: shortcircuiteval.p (46, 9): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (46, 15): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (46, 24): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (46, 32): inferred type:  NIL
OUT: shortcircuiteval.p (46, 34): inferred type:  NIL
OUT: shortcircuiteval.p (47, 5): inferred type:  NIL
OUT: shortcircuiteval.p (47, 9): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (47, 14): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (47, 33): inferred type:  NIL
OUT: shortcircuiteval.p (52, 5): inferred type:  NIL
OUT: shortcircuiteval.p (52, 11): inferred type:  BaseType(EVENT)
OUT: shortcircuiteval.p (58, 8): inferred type:  NIL
OUT: shortcircuiteval.p (58, 15): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (63, 9): inferred type:  NIL
OUT: shortcircuiteval.p (63, 16): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: shortcircuiteval.p (68, 8): inferred type:  NIL
OUT: shortcircuiteval.p (68, 14): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (68, 16): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (69, 8): inferred type:  NIL
OUT: shortcircuiteval.p (69, 15): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (77, 7): inferred type:  NIL
OUT: shortcircuiteval.p (77, 7): inferred type:  SeqType(BaseType(INT))
OUT: shortcircuiteval.p (77, 12): inferred type:  BaseType(ANY)
OUT: shortcircuiteval.p (77, 20): inferred type:  SeqType(BaseType(INT))
OUT: shortcircuiteval.p (78, 4): inferred type:  NIL
OUT: shortcircuiteval.p (78, 13): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (78, 14): inferred type:  BaseType(INT)
OUT: shortcircuiteval.p (78, 17): inferred type:  BaseType(BOOL)
OUT: shortcircuiteval.p (78, 20): inferred type:  BaseType(INT)
OUT: 
EXIT: 0
