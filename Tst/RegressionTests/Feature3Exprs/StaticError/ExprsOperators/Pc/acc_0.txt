=================================
         Console output          
=================================
OUT: exproperators.p (62, 5): "assert" expects a boolean value
OUT: exproperators.p (62, 20): Operator expected first argument to be an integer value
OUT: exproperators.p (62, 30): Values cannot be compared because their types are incompatible
OUT: exproperators.p (63, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (63, 15): Operator expected a boolean value
OUT: exproperators.p (64, 5): "assert" expects a boolean value
OUT: exproperators.p (64, 20): Operator expected first argument to be an integer value
OUT: exproperators.p (65, 5): "assert" expects a boolean value
OUT: exproperators.p (65, 14): Operator expected second argument to be an integer value
OUT: exproperators.p (66, 5): "assert" expects a boolean value
OUT: exproperators.p (66, 20): Operator expected second argument to be a boolean value
OUT: exproperators.p (66, 25): Values cannot be compared because their types are incompatible
OUT: exproperators.p (67, 5): "assert" expects a boolean value
OUT: exproperators.p (67, 14): Operator expected first argument to be a boolean value
OUT: exproperators.p (69, 5): "assert" expects a boolean value
OUT: exproperators.p (69, 15): Values cannot be compared because their types are incompatible
OUT: exproperators.p (80, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (80, 17): Operator expected second argument to be an integer value
OUT: exproperators.p (81, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (81, 20): Operator expected first argument to be an integer value
OUT: exproperators.p (82, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (82, 17): Operator expected second argument to be an integer value
OUT: exproperators.p (83, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (83, 17): Operator expected second argument to be an integer value
OUT: exproperators.p (85, 5): "assert" expects a boolean value
OUT: exproperators.p (85, 18): Operator expected second argument to be an integer value
OUT: exproperators.p (86, 5): "assert" expects a boolean value
OUT: exproperators.p (86, 18): Operator expected second argument to be an integer value
OUT: exproperators.p (87, 5): "assert" expects a boolean value
OUT: exproperators.p (87, 18): Operator expected second argument to be an integer value
OUT: exproperators.p (88, 5): "assert" expects a boolean value
OUT: exproperators.p (88, 18): Operator expected second argument to be an integer value
OUT: exproperators.p (90, 5): "assert" expects a boolean value
OUT: exproperators.p (90, 17): Operator expected first argument to be a boolean value
OUT: exproperators.p (91, 5): "assert" expects a boolean value
OUT: exproperators.p (91, 17): Operator expected first argument to be a boolean value
OUT: exproperators.p (92, 5): "assert" expects a boolean value
OUT: exproperators.p (92, 20): Operator expected second argument to be a boolean value
OUT: exproperators.p (94, 5): "assert" expects a boolean value
OUT: exproperators.p (94, 17): Operator expected second argument to be an integer value
OUT: exproperators.p (95, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (95, 12): Operator expected an integer value
OUT: exproperators.p (96, 5): "assert" expects a boolean value
OUT: exproperators.p (96, 17): Values cannot be compared because their types are incompatible
OUT: exproperators.p (98, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (98, 15): Operator expected a boolean value
OUT: exproperators.p (99, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (99, 15): Operator expected a boolean value
OUT: exproperators.p (101, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (101, 12): Operator expected an integer value
OUT: exproperators.p (106, 5): "assert" expects a boolean value
OUT: exproperators.p (106, 17): Values cannot be compared because their types are incompatible
OUT: exproperators.p (106, 20): Operator expected an integer value
OUT: exproperators.p (107, 5): "assert" expects a boolean value
OUT: exproperators.p (107, 14): Operator expected first argument to be an integer value
OUT: exproperators.p (107, 21): Values cannot be compared because their types are incompatible
OUT: exproperators.p (108, 5): "assert" expects a boolean value
OUT: exproperators.p (108, 14): Operator expected first argument to be an integer value
OUT: exproperators.p (108, 18): Values cannot be compared because their types are incompatible
OUT: exproperators.p (110, 5): "assert" expects a boolean value
OUT: exproperators.p (110, 14): Operator expected first argument to be an integer value
OUT: exproperators.p (111, 5): "assert" expects a boolean value
OUT: exproperators.p (111, 14): Operator expected first argument to be an integer value
OUT: exproperators.p (125, 5): "assert" expects a boolean value
OUT: exproperators.p (125, 14): Operator expected first argument to be a boolean value
OUT: exproperators.p (132, 5): value must be a subtype of sequence type
OUT: exproperators.p (138, 5): key must be an integer
OUT: exproperators.p (146, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (146, 9): Operator expected a map value
OUT: exproperators.p (146, 20): Indexer must be applied to a sequence or map
OUT: exproperators.p (147, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (147, 9): Operator expected a map value
OUT: exproperators.p (147, 22): Indexer must be applied to a sequence or map
OUT: exproperators.p (148, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (148, 9): Operator expected a map or sequence value
OUT: exproperators.p (169, 5): "assert" expects a boolean value
OUT: exproperators.p (169, 18): Value can never be in the map
OUT: exproperators.p (170, 5): "assert" expects a boolean value
OUT: exproperators.p (170, 26): Values cannot be compared because their types are incompatible
OUT: exproperators.p (172, 5): key not in the domain of the map
OUT: exproperators.p (173, 5): value not in the codomain of the map
OUT: exproperators.p (219, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: exproperators.p (220, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: Compilation failed
EXIT: -1
