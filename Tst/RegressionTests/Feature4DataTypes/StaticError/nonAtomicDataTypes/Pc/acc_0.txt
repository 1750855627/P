=================================
         Console output          
=================================
OUT: nonatomicdatatypes.p (41, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (41, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (41, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (41, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (41, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (41, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (41, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (42, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (42, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (42, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (42, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (42, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (42, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (42, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (43, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (43, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (43, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (43, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (43, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (43, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (43, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (44, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (44, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (44, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (44, 12): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (44, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (44, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (44, 19): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (47, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (47, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (47, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (47, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (47, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (47, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (48, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (48, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (48, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (48, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (49, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (49, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (49, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (49, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (49, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (49, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (49, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (50, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (50, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (50, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (50, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (50, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (50, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (50, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (52, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (52, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (52, 9): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (53, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (53, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (53, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (53, 8): inferred type:  ERROR
OUT: nonatomicdatatypes.p (53, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (54, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (54, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (54, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (54, 8): inferred type:  ERROR
OUT: nonatomicdatatypes.p (54, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (56, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (56, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (56, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (56, 10): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (57, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (57, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (57, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: nonatomicdatatypes.p (57, 10): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (60, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (60, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (60, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (60, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (60, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (60, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (61, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (61, 11): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (61, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (61, 17): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (61, 20): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (61, 20): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (62, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (62, 11): inferred type:  SeqType(BaseType(ANY))
OUT: nonatomicdatatypes.p (62, 16): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (63, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (63, 11): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (63, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (66, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (66, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (66, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (66, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (66, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (66, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (67, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (67, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (67, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (67, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (67, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (67, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (68, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (68, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (68, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (69, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (69, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (69, 20): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (69, 23): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (69, 26): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (70, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (70, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (70, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (70, 15): inferred type:  ERROR
OUT: nonatomicdatatypes.p (70, 18): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (72, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (72, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (72, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (72, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (72, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (72, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (72, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (74, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (74, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (74, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (74, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (74, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (74, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (75, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (75, 12): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (75, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (75, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (75, 17): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (75, 20): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (76, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (76, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (76, 6): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (76, 7): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (76, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (77, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (77, 12): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (77, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (77, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (77, 17): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (77, 19): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (78, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (78, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (78, 9): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (79, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (79, 12): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (79, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (79, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (79, 17): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (79, 20): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (82, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (82, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (82, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (82, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (82, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (82, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (83, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (83, 11): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (83, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (83, 18): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (83, 20): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (83, 20): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (84, 8): inferred type:  BaseType(REAL)
OUT: nonatomicdatatypes.p (84, 8): inferred type:  NIL
OUT: nonatomicdatatypes.p (84, 14): inferred type:  BaseType(REAL)
OUT: nonatomicdatatypes.p (84, 23): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (87, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (87, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (87, 7): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (87, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (87, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (88, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (88, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (88, 15): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (88, 18): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (89, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (89, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (89, 9): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (89, 14): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (89, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (89, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (90, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (90, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (90, 14): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (90, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (91, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (91, 12): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (91, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (91, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (91, 18): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (91, 21): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (92, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (92, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (92, 7): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (92, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (92, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (93, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (93, 12): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (93, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (93, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (93, 18): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (93, 21): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (94, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (94, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (94, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (95, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (95, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (95, 20): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (95, 24): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (95, 27): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (96, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (96, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (96, 7): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (96, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (96, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (97, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (97, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (97, 9): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (98, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (98, 12): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (98, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (98, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (98, 18): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (98, 21): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (99, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: nonatomicdatatypes.p (99, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (99, 7): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (99, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (99, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (101, 5): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: nonatomicdatatypes.p (101, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (101, 7): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (101, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (101, 13): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (102, 5): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: nonatomicdatatypes.p (102, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (102, 7): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (102, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (102, 13): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (103, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (103, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (103, 20): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: nonatomicdatatypes.p (103, 24): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (103, 27): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (104, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (104, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (104, 13): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (104, 18): inferred type:  ERROR
OUT: nonatomicdatatypes.p (104, 21): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: nonatomicdatatypes.p (107, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (107, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: nonatomicdatatypes.p (107, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (107, 12): inferred type:  TupType(BaseType(INT), TupType(SeqType(BaseType(BOOL)), NIL))
OUT: nonatomicdatatypes.p (107, 14): inferred type:  SeqType(BaseType(BOOL))
OUT: nonatomicdatatypes.p (107, 14): inferred type:  TupType(SeqType(BaseType(BOOL)), NIL)
OUT: nonatomicdatatypes.p (108, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (108, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: nonatomicdatatypes.p (108, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (108, 12): inferred type:  TupType(BaseType(INT), TupType(SeqType(BaseType(ANY)), NIL))
OUT: nonatomicdatatypes.p (108, 14): inferred type:  SeqType(BaseType(ANY))
OUT: nonatomicdatatypes.p (108, 14): inferred type:  TupType(SeqType(BaseType(ANY)), NIL)
OUT: nonatomicdatatypes.p (109, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (109, 13): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: nonatomicdatatypes.p (109, 15): inferred type:  SeqType(BaseType(ANY))
OUT: nonatomicdatatypes.p (109, 16): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (109, 19): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (109, 22): inferred type:  SeqType(BaseType(BOOL))
OUT: nonatomicdatatypes.p (110, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (110, 13): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: nonatomicdatatypes.p (110, 15): inferred type:  SeqType(BaseType(ANY))
OUT: nonatomicdatatypes.p (110, 16): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (110, 18): inferred type:  BaseType(ANY)
OUT: nonatomicdatatypes.p (110, 19): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (110, 22): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (110, 25): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (112, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (112, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: nonatomicdatatypes.p (112, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (113, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (113, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: nonatomicdatatypes.p (113, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (114, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (114, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (114, 20): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: nonatomicdatatypes.p (114, 24): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (114, 27): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (119, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (119, 5): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (119, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (119, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (119, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (119, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (120, 5): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: nonatomicdatatypes.p (120, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (120, 9): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (120, 10): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (120, 15): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (121, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (121, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (121, 10): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (121, 14): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (121, 17): inferred type:  NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL)
OUT: nonatomicdatatypes.p (121, 21): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: nonatomicdatatypes.p (123, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (123, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (123, 7): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (123, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (123, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (123, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (123, 15): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (124, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (124, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (124, 16): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (124, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (124, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (124, 21): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (124, 24): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (126, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (126, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (126, 7): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (126, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (126, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (126, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (126, 15): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (127, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (127, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (127, 16): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (127, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (127, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (127, 21): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (127, 24): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (129, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (129, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (129, 7): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (129, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (129, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (129, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (129, 15): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (130, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (130, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (130, 16): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (130, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (130, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (130, 21): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (130, 24): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (131, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (131, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (131, 16): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (131, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (131, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (131, 21): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (131, 24): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (135, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (135, 5): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (135, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (135, 12): inferred type:  TupType(BaseType(INT), TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL))
OUT: nonatomicdatatypes.p (135, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (135, 15): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (135, 15): inferred type:  TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL)
OUT: nonatomicdatatypes.p (135, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (135, 17): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (136, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (136, 5): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (136, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (136, 12): inferred type:  TupType(BaseType(INT), TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL))
OUT: nonatomicdatatypes.p (136, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (136, 15): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (136, 15): inferred type:  TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL)
OUT: nonatomicdatatypes.p (136, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (136, 17): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (137, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (137, 5): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (137, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (137, 12): inferred type:  TupType(BaseType(INT), TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL))
OUT: nonatomicdatatypes.p (137, 16): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (137, 16): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (137, 16): inferred type:  TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL)
OUT: nonatomicdatatypes.p (137, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (137, 18): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (139, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (139, 5): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (139, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (139, 12): inferred type:  TupType(BaseType(INT), TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL))
OUT: nonatomicdatatypes.p (139, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (139, 15): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (139, 15): inferred type:  TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL)
OUT: nonatomicdatatypes.p (139, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (139, 17): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (140, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (140, 5): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (140, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (140, 12): inferred type:  TupType(BaseType(INT), TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL))
OUT: nonatomicdatatypes.p (140, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (140, 15): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (140, 15): inferred type:  TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL)
OUT: nonatomicdatatypes.p (140, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (140, 17): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (141, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (141, 5): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (141, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (141, 12): inferred type:  TupType(BaseType(INT), TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL))
OUT: nonatomicdatatypes.p (141, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (141, 15): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: nonatomicdatatypes.p (141, 15): inferred type:  TupType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)), NIL)
OUT: nonatomicdatatypes.p (141, 17): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (141, 17): inferred type:  TupType(BaseType(INT), NIL)
OUT: nonatomicdatatypes.p (143, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (143, 5): inferred type:  MapType(BaseType(BOOL), SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))))
OUT: nonatomicdatatypes.p (143, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (143, 7): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: nonatomicdatatypes.p (143, 8): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (143, 16): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (144, 5): inferred type:  ERROR
OUT: nonatomicdatatypes.p (144, 5): inferred type:  MapType(BaseType(BOOL), SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))))
OUT: nonatomicdatatypes.p (144, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (144, 7): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: nonatomicdatatypes.p (144, 8): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (144, 17): inferred type:  SeqType(TupType(BaseType(INT), TupType(BaseType(INT), NIL)))
OUT: nonatomicdatatypes.p (147, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (147, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (147, 13): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (147, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (147, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (147, 24): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (149, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (149, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (149, 18): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (149, 19): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (149, 20): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (149, 29): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (150, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (150, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (150, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (151, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (151, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (151, 12): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (151, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (151, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (151, 21): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (152, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (152, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(ANY))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(ANY)))), NIL))
OUT: nonatomicdatatypes.p (152, 12): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (154, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (154, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(ANY))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(ANY)))), NIL))
OUT: nonatomicdatatypes.p (154, 10): inferred type:  SeqType(BaseType(ANY))
OUT: nonatomicdatatypes.p (154, 11): inferred type:  BaseType(ANY)
OUT: nonatomicdatatypes.p (154, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (154, 21): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (156, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (156, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (156, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (158, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (158, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (158, 7): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (158, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (158, 9): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (158, 18): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (159, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (159, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (159, 13): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (159, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (159, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (159, 22): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (160, 11): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (160, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (160, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (163, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (163, 11): inferred type:  BaseType(EVENT)
OUT: nonatomicdatatypes.p (169, 8): inferred type:  NIL
OUT: nonatomicdatatypes.p (169, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (174, 9): inferred type:  NIL
OUT: nonatomicdatatypes.p (174, 16): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: nonatomicdatatypes.p (179, 8): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (179, 8): inferred type:  NIL
OUT: nonatomicdatatypes.p (179, 12): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (179, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (179, 16): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (180, 8): inferred type:  NIL
OUT: nonatomicdatatypes.p (180, 15): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (188, 7): inferred type:  NIL
OUT: nonatomicdatatypes.p (188, 7): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (188, 12): inferred type:  BaseType(ANY)
OUT: nonatomicdatatypes.p (188, 20): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (189, 4): inferred type:  NIL
OUT: nonatomicdatatypes.p (189, 11): inferred type:  SeqType(BaseType(INT))
OUT: nonatomicdatatypes.p (189, 13): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (189, 14): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (189, 17): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (189, 20): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (41, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (42, 5): insert must be applied to a sequence or a map
OUT: nonatomicdatatypes.p (43, 5): remove must be applied to a sequence or map
OUT: nonatomicdatatypes.p (48, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (49, 5): insert must be applied to a sequence or a map
OUT: nonatomicdatatypes.p (50, 5): remove must be applied to a sequence or map
OUT: nonatomicdatatypes.p (53, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (53, 8): Bad field name
OUT: nonatomicdatatypes.p (54, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (54, 8): Bad field name
OUT: nonatomicdatatypes.p (56, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (57, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (70, 5): "assert" expects a boolean value
OUT: nonatomicdatatypes.p (70, 15): "in" expects a map
OUT: nonatomicdatatypes.p (72, 5): index must be an integer
OUT: nonatomicdatatypes.p (104, 5): "assert" expects a boolean value
OUT: nonatomicdatatypes.p (104, 18): Value can never be in the map
OUT: nonatomicdatatypes.p (143, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (144, 5): invalid assignment. right hand side is not a subtype of left hand side
OUT: nonatomicdatatypes.p (149, 11): invalid LHS; must have the form LHS ::= var | LHS[expr] | LHS.name
OUT: nonatomicdatatypes.p (151, 5): invalid LHS; must have the form LHS ::= var | LHS[expr] | LHS.name
OUT: Compilation failed
OUT: 
EXIT: -1
