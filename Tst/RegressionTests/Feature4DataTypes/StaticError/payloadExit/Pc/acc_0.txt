=================================
         Console output          
=================================
OUT: payloadexit.p (20, 4): inferred type:  BaseType(INT)
OUT: payloadexit.p (20, 4): inferred type:  NIL
OUT: payloadexit.p (20, 10): inferred type:  SeqType(BaseType(INT))
OUT: payloadexit.p (20, 17): inferred type:  BaseType(INT)
OUT: payloadexit.p (20, 18): inferred type:  BaseType(INT)
OUT: payloadexit.p (24, 4): inferred type:  BaseType(INT)
OUT: payloadexit.p (24, 4): inferred type:  NIL
OUT: payloadexit.p (24, 10): inferred type:  NmdTupType(NmdTupTypeField("first", MapType(BaseType(INT), BaseType(INT))), NmdTupType(NmdTupTypeField("sec", SeqType(BaseType(BOOL))), NIL))
OUT: payloadexit.p (24, 18): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: payloadexit.p (24, 23): inferred type:  BaseType(INT)
OUT: payloadexit.p (24, 24): inferred type:  BaseType(INT)
OUT: payloadexit.p (25, 4): inferred type:  BaseType(BOOL)
OUT: payloadexit.p (25, 4): inferred type:  NIL
OUT: payloadexit.p (25, 19): inferred type:  SeqType(BaseType(BOOL))
OUT: payloadexit.p (25, 22): inferred type:  BaseType(BOOL)
OUT: payloadexit.p (25, 23): inferred type:  BaseType(INT)
OUT: payloadexit.p (34, 4): inferred type:  BaseType(INT)
OUT: payloadexit.p (34, 4): inferred type:  ERROR
OUT: payloadexit.p (34, 4): inferred type:  NIL
OUT: payloadexit.p (34, 18): inferred type:  ERROR
OUT: payloadexit.p (35, 4): inferred type:  BaseType(BOOL)
OUT: payloadexit.p (35, 4): inferred type:  ERROR
OUT: payloadexit.p (35, 11): inferred type:  BaseType(ANY)
OUT: payloadexit.p (35, 19): inferred type:  ERROR
OUT: payloadexit.p (42, 4): inferred type:  BaseType(REAL)
OUT: payloadexit.p (42, 4): inferred type:  ERROR
OUT: payloadexit.p (42, 4): inferred type:  NIL
OUT: payloadexit.p (43, 4): inferred type:  BaseType(INT)
OUT: payloadexit.p (43, 4): inferred type:  ERROR
OUT: payloadexit.p (43, 10): inferred type:  BaseType(ANY)
OUT: payloadexit.p (60, 4): inferred type:  BaseType(INT)
OUT: payloadexit.p (60, 4): inferred type:  ERROR
OUT: payloadexit.p (60, 4): inferred type:  NIL
OUT: payloadexit.p (60, 18): inferred type:  ERROR
OUT: payloadexit.p (60, 23): inferred type:  ERROR
OUT: payloadexit.p (60, 24): inferred type:  BaseType(BOOL)
OUT: payloadexit.p (61, 4): inferred type:  BaseType(BOOL)
OUT: payloadexit.p (61, 4): inferred type:  ERROR
OUT: payloadexit.p (61, 11): inferred type:  BaseType(ANY)
OUT: payloadexit.p (61, 19): inferred type:  ERROR
OUT: payloadexit.p (61, 22): inferred type:  ERROR
OUT: payloadexit.p (61, 23): inferred type:  BaseType(INT)
OUT: payloadexit.p (68, 3): inferred type:  NIL
OUT: payloadexit.p (70, 4): inferred type:  BaseType(INT)
OUT: payloadexit.p (70, 4): inferred type:  ERROR
OUT: payloadexit.p (70, 4): inferred type:  NIL
OUT: payloadexit.p (70, 18): inferred type:  ERROR
OUT: payloadexit.p (71, 4): inferred type:  BaseType(BOOL)
OUT: payloadexit.p (71, 4): inferred type:  ERROR
OUT: payloadexit.p (71, 11): inferred type:  BaseType(ANY)
OUT: payloadexit.p (71, 19): inferred type:  ERROR
OUT: payloadexit.p (34, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (34, 18): Operator expected a (named) tuple value
OUT: payloadexit.p (35, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (35, 19): Operator expected a (named) tuple value
OUT: payloadexit.p (42, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (43, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (60, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (60, 18): Operator expected a (named) tuple value
OUT: payloadexit.p (60, 23): Indexer must be applied to a sequence or map
OUT: payloadexit.p (61, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (61, 19): Operator expected a (named) tuple value
OUT: payloadexit.p (61, 22): Indexer must be applied to a sequence or map
OUT: payloadexit.p (70, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (70, 18): Operator expected a (named) tuple value
OUT: payloadexit.p (71, 4): invalid assignment. right hand side is not a subtype of left hand side
OUT: payloadexit.p (71, 19): Operator expected a (named) tuple value
OUT: Compilation failed
OUT: 
EXIT: -1
