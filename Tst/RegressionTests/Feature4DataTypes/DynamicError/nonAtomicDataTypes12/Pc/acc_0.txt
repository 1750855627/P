=================================
         Console output          
=================================
OUT: Writing stubs.c ...
OUT: Writing program.h ...
OUT: Writing program.c ...
OUT: Writing StackOverflowException.zing ...
OUT: Compiling StackOverflowException.zing to StackOverflowException.dll ...
OUT: stackoverflowexception.p (31, 5): inferred type:  NIL
OUT: stackoverflowexception.p (31, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (31, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (31, 12): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (31, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (31, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (31, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (32, 5): inferred type:  NIL
OUT: stackoverflowexception.p (32, 13): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (32, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (32, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (32, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (32, 23): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (32, 26): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (32, 29): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (32, 31): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (32, 34): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (33, 5): inferred type:  NIL
OUT: stackoverflowexception.p (33, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (33, 11): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (33, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (33, 18): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (33, 22): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (34, 5): inferred type:  NIL
OUT: stackoverflowexception.p (34, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (34, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (34, 12): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (34, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (34, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (34, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (35, 5): inferred type:  NIL
OUT: stackoverflowexception.p (35, 13): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (35, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (35, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (35, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (37, 5): inferred type:  NIL
OUT: stackoverflowexception.p (37, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (37, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (37, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (38, 5): inferred type:  NIL
OUT: stackoverflowexception.p (38, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (38, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (38, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (39, 5): inferred type:  NIL
OUT: stackoverflowexception.p (39, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (39, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (39, 12): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (39, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (39, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (39, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (40, 5): inferred type:  NIL
OUT: stackoverflowexception.p (40, 13): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (40, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (40, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (40, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (41, 5): inferred type:  NIL
OUT: stackoverflowexception.p (41, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (41, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (41, 12): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (41, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (41, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (41, 19): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (41, 22): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (42, 5): inferred type:  NIL
OUT: stackoverflowexception.p (42, 13): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (42, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (42, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (42, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (44, 5): inferred type:  NIL
OUT: stackoverflowexception.p (44, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (44, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (44, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (45, 5): inferred type:  NIL
OUT: stackoverflowexception.p (45, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (45, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (45, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (46, 5): inferred type:  NIL
OUT: stackoverflowexception.p (46, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (46, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (46, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (46, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (46, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (46, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (47, 5): inferred type:  NIL
OUT: stackoverflowexception.p (47, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (47, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (47, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (47, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (49, 5): inferred type:  NIL
OUT: stackoverflowexception.p (49, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (49, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (49, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (49, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (49, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (51, 5): inferred type:  NIL
OUT: stackoverflowexception.p (51, 5): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (51, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (51, 12): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (51, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (52, 5): inferred type:  NIL
OUT: stackoverflowexception.p (52, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (52, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (52, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (52, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (54, 5): inferred type:  NIL
OUT: stackoverflowexception.p (54, 5): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (54, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (54, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (54, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (54, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (54, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (55, 5): inferred type:  NIL
OUT: stackoverflowexception.p (55, 13): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (55, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (55, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (55, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (58, 5): inferred type:  NIL
OUT: stackoverflowexception.p (58, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (58, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (58, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (58, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (58, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (59, 11): inferred type:  NIL
OUT: stackoverflowexception.p (59, 11): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (59, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (59, 17): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (59, 20): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (59, 20): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (61, 11): inferred type:  NIL
OUT: stackoverflowexception.p (61, 11): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (61, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (62, 5): inferred type:  NIL
OUT: stackoverflowexception.p (62, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (62, 19): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (62, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (62, 25): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (64, 11): inferred type:  NIL
OUT: stackoverflowexception.p (64, 11): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (64, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (65, 5): inferred type:  NIL
OUT: stackoverflowexception.p (65, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (65, 19): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (65, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (65, 25): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (68, 5): inferred type:  NIL
OUT: stackoverflowexception.p (68, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (68, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (68, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (68, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (68, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (69, 5): inferred type:  NIL
OUT: stackoverflowexception.p (69, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (69, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (69, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (69, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (69, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (70, 5): inferred type:  NIL
OUT: stackoverflowexception.p (70, 13): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (70, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (70, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (70, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (70, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (71, 5): inferred type:  NIL
OUT: stackoverflowexception.p (71, 13): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (71, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (71, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (71, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (71, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (73, 5): inferred type:  NIL
OUT: stackoverflowexception.p (73, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (73, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (74, 5): inferred type:  NIL
OUT: stackoverflowexception.p (74, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (74, 20): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (74, 23): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (74, 26): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (76, 5): inferred type:  NIL
OUT: stackoverflowexception.p (76, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (76, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (76, 11): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (76, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (76, 13): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (77, 5): inferred type:  NIL
OUT: stackoverflowexception.p (77, 12): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (77, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (77, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (77, 17): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (77, 20): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (78, 5): inferred type:  NIL
OUT: stackoverflowexception.p (78, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (78, 6): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (78, 7): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (78, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (79, 5): inferred type:  NIL
OUT: stackoverflowexception.p (79, 12): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (79, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (79, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (79, 17): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (79, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (80, 5): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (80, 5): inferred type:  NIL
OUT: stackoverflowexception.p (80, 9): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (81, 5): inferred type:  NIL
OUT: stackoverflowexception.p (81, 12): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (81, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (81, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (81, 17): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (81, 20): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (83, 5): inferred type:  NIL
OUT: stackoverflowexception.p (83, 5): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (83, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (83, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(BOOL), NIL))
OUT: stackoverflowexception.p (83, 14): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (83, 14): inferred type:  TupType(BaseType(BOOL), NIL)
OUT: stackoverflowexception.p (84, 5): inferred type:  NIL
OUT: stackoverflowexception.p (84, 5): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (84, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (84, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(BOOL), NIL))
OUT: stackoverflowexception.p (84, 14): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (84, 14): inferred type:  TupType(BaseType(BOOL), NIL)
OUT: stackoverflowexception.p (86, 5): inferred type:  NIL
OUT: stackoverflowexception.p (86, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (86, 20): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (86, 24): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (86, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (87, 5): inferred type:  NIL
OUT: stackoverflowexception.p (87, 5): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (87, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (87, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (87, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (87, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (89, 5): inferred type:  NIL
OUT: stackoverflowexception.p (89, 5): inferred type:  SeqType(BaseType(BOOL))
OUT: stackoverflowexception.p (89, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (89, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(BOOL), NIL))
OUT: stackoverflowexception.p (89, 15): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (89, 15): inferred type:  TupType(BaseType(BOOL), NIL)
OUT: stackoverflowexception.p (90, 5): inferred type:  NIL
OUT: stackoverflowexception.p (90, 5): inferred type:  SeqType(BaseType(BOOL))
OUT: stackoverflowexception.p (90, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (90, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(BOOL), NIL))
OUT: stackoverflowexception.p (90, 15): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (90, 15): inferred type:  TupType(BaseType(BOOL), NIL)
OUT: stackoverflowexception.p (91, 5): inferred type:  NIL
OUT: stackoverflowexception.p (91, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (91, 20): inferred type:  SeqType(BaseType(BOOL))
OUT: stackoverflowexception.p (91, 24): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (91, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (93, 5): inferred type:  NIL
OUT: stackoverflowexception.p (93, 5): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (93, 10): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (94, 5): inferred type:  NIL
OUT: stackoverflowexception.p (94, 12): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (94, 14): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (94, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (94, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (94, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (97, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (97, 5): inferred type:  NIL
OUT: stackoverflowexception.p (97, 7): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (97, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (97, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (98, 5): inferred type:  NIL
OUT: stackoverflowexception.p (98, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (98, 15): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (98, 18): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (99, 5): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (99, 5): inferred type:  NIL
OUT: stackoverflowexception.p (99, 9): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (99, 14): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (99, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (99, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (100, 5): inferred type:  NIL
OUT: stackoverflowexception.p (100, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (100, 14): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (100, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (101, 5): inferred type:  NIL
OUT: stackoverflowexception.p (101, 12): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (101, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (101, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (101, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (101, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (102, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (102, 5): inferred type:  NIL
OUT: stackoverflowexception.p (102, 7): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (102, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (102, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (103, 5): inferred type:  NIL
OUT: stackoverflowexception.p (103, 12): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (103, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (103, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (103, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (103, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (104, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (104, 5): inferred type:  NIL
OUT: stackoverflowexception.p (104, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (105, 5): inferred type:  NIL
OUT: stackoverflowexception.p (105, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (105, 20): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (105, 24): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (105, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (106, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (106, 5): inferred type:  NIL
OUT: stackoverflowexception.p (106, 7): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (106, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (106, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (107, 5): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (107, 5): inferred type:  NIL
OUT: stackoverflowexception.p (107, 9): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (108, 5): inferred type:  NIL
OUT: stackoverflowexception.p (108, 12): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (108, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (108, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (108, 18): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (108, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (109, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (109, 5): inferred type:  NIL
OUT: stackoverflowexception.p (109, 7): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (109, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (109, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (111, 5): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: stackoverflowexception.p (111, 5): inferred type:  NIL
OUT: stackoverflowexception.p (111, 7): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (111, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (111, 13): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (112, 5): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: stackoverflowexception.p (112, 5): inferred type:  NIL
OUT: stackoverflowexception.p (112, 7): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (112, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (112, 13): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (113, 5): inferred type:  NIL
OUT: stackoverflowexception.p (113, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (113, 20): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: stackoverflowexception.p (113, 24): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (113, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (115, 5): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (115, 5): inferred type:  NIL
OUT: stackoverflowexception.p (115, 10): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (116, 5): inferred type:  NIL
OUT: stackoverflowexception.p (116, 13): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (116, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (116, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (116, 19): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (116, 22): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (120, 5): inferred type:  NIL
OUT: stackoverflowexception.p (120, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (120, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (120, 12): inferred type:  TupType(BaseType(INT), TupType(SeqType(BaseType(BOOL)), NIL))
OUT: stackoverflowexception.p (120, 14): inferred type:  SeqType(BaseType(BOOL))
OUT: stackoverflowexception.p (120, 14): inferred type:  TupType(SeqType(BaseType(BOOL)), NIL)
OUT: stackoverflowexception.p (121, 5): inferred type:  NIL
OUT: stackoverflowexception.p (121, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (121, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (121, 12): inferred type:  TupType(BaseType(INT), TupType(SeqType(BaseType(ANY)), NIL))
OUT: stackoverflowexception.p (121, 14): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (121, 14): inferred type:  TupType(SeqType(BaseType(ANY)), NIL)
OUT: stackoverflowexception.p (122, 5): inferred type:  NIL
OUT: stackoverflowexception.p (122, 13): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (122, 15): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (122, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (122, 19): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (122, 22): inferred type:  SeqType(BaseType(BOOL))
OUT: stackoverflowexception.p (123, 5): inferred type:  NIL
OUT: stackoverflowexception.p (123, 13): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (123, 15): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (123, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (123, 19): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (123, 22): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (124, 5): inferred type:  NIL
OUT: stackoverflowexception.p (124, 13): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (124, 15): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (124, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (124, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (124, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (124, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (124, 25): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (126, 5): inferred type:  NIL
OUT: stackoverflowexception.p (126, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (126, 7): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (126, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (126, 13): inferred type:  SeqType(BaseType(BOOL))
OUT: stackoverflowexception.p (127, 5): inferred type:  NIL
OUT: stackoverflowexception.p (127, 13): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (127, 15): inferred type:  SeqType(BaseType(ANY))
OUT: stackoverflowexception.p (127, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (127, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (127, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (127, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (127, 25): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (128, 5): inferred type:  NIL
OUT: stackoverflowexception.p (128, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (128, 20): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (128, 24): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (128, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (130, 5): inferred type:  NIL
OUT: stackoverflowexception.p (130, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (130, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (131, 5): inferred type:  NIL
OUT: stackoverflowexception.p (131, 5): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (131, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (132, 5): inferred type:  NIL
OUT: stackoverflowexception.p (132, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (132, 20): inferred type:  SeqType(SeqType(BaseType(ANY)))
OUT: stackoverflowexception.p (132, 24): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (132, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (135, 5): inferred type:  NIL
OUT: stackoverflowexception.p (135, 5): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (135, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (135, 12): inferred type:  TupType(BaseType(INT), TupType(MapType(BaseType(INT), BaseType(INT)), NIL))
OUT: stackoverflowexception.p (135, 14): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (135, 14): inferred type:  TupType(MapType(BaseType(INT), BaseType(INT)), NIL)
OUT: stackoverflowexception.p (136, 5): inferred type:  NIL
OUT: stackoverflowexception.p (136, 13): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (136, 15): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (136, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (136, 19): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (136, 22): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (137, 5): inferred type:  NIL
OUT: stackoverflowexception.p (137, 13): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (137, 15): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (137, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (137, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (137, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (137, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (137, 25): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (138, 5): inferred type:  NIL
OUT: stackoverflowexception.p (138, 5): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (138, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (138, 12): inferred type:  TupType(BaseType(INT), TupType(MapType(BaseType(INT), BaseType(BOOL)), NIL))
OUT: stackoverflowexception.p (138, 14): inferred type:  MapType(BaseType(INT), BaseType(BOOL))
OUT: stackoverflowexception.p (138, 14): inferred type:  TupType(MapType(BaseType(INT), BaseType(BOOL)), NIL)
OUT: stackoverflowexception.p (139, 5): inferred type:  NIL
OUT: stackoverflowexception.p (139, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (139, 20): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (139, 24): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (139, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (140, 5): inferred type:  NIL
OUT: stackoverflowexception.p (140, 13): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (140, 18): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (140, 20): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (140, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (140, 24): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (140, 25): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (140, 28): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (140, 31): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (142, 5): inferred type:  NIL
OUT: stackoverflowexception.p (142, 13): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (142, 15): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (142, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (142, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (142, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (142, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (142, 25): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (143, 5): inferred type:  NIL
OUT: stackoverflowexception.p (143, 5): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (143, 7): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (143, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (143, 10): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (143, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (143, 16): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (144, 5): inferred type:  NIL
OUT: stackoverflowexception.p (144, 13): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (144, 15): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (144, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (144, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (144, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (144, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (144, 25): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (146, 5): inferred type:  NIL
OUT: stackoverflowexception.p (146, 5): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (146, 7): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (146, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (146, 10): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (146, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (146, 16): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (147, 5): inferred type:  NIL
OUT: stackoverflowexception.p (147, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (147, 20): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (147, 22): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (147, 23): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (147, 27): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (147, 30): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (149, 5): inferred type:  NIL
OUT: stackoverflowexception.p (149, 5): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (149, 7): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (149, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (149, 13): inferred type:  MapType(BaseType(INT), BaseType(INT))
OUT: stackoverflowexception.p (150, 5): inferred type:  NIL
OUT: stackoverflowexception.p (150, 13): inferred type:  SeqType(MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (150, 15): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (150, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (150, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (150, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (150, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (150, 25): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (153, 5): inferred type:  NIL
OUT: stackoverflowexception.p (153, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (153, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (153, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (153, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (153, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (154, 11): inferred type:  NIL
OUT: stackoverflowexception.p (154, 11): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (154, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (154, 18): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (154, 20): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (154, 20): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (155, 8): inferred type:  BaseType(REAL)
OUT: stackoverflowexception.p (155, 8): inferred type:  NIL
OUT: stackoverflowexception.p (155, 14): inferred type:  BaseType(REAL)
OUT: stackoverflowexception.p (155, 23): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (158, 5): inferred type:  NIL
OUT: stackoverflowexception.p (158, 5): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (158, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (158, 12): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (158, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (158, 14): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (159, 5): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (159, 5): inferred type:  NIL
OUT: stackoverflowexception.p (159, 9): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (159, 10): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (159, 15): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (160, 5): inferred type:  NIL
OUT: stackoverflowexception.p (160, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (160, 10): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (160, 14): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (160, 18): inferred type:  NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL)
OUT: stackoverflowexception.p (160, 22): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (161, 5): inferred type:  NIL
OUT: stackoverflowexception.p (161, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (161, 20): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (161, 22): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (161, 25): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (161, 28): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (163, 5): inferred type:  NIL
OUT: stackoverflowexception.p (163, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (163, 7): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (163, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (163, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (163, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (163, 15): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (164, 5): inferred type:  NIL
OUT: stackoverflowexception.p (164, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (164, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (164, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (164, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (164, 21): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (164, 24): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (165, 5): inferred type:  NIL
OUT: stackoverflowexception.p (165, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (165, 20): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (165, 22): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (165, 25): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (165, 28): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (167, 5): inferred type:  NIL
OUT: stackoverflowexception.p (167, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (167, 7): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (167, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (167, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (167, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (167, 15): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (168, 5): inferred type:  NIL
OUT: stackoverflowexception.p (168, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (168, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (168, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (168, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (168, 21): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (168, 24): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (169, 5): inferred type:  NIL
OUT: stackoverflowexception.p (169, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (169, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (169, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (169, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (169, 21): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (169, 24): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (170, 5): inferred type:  NIL
OUT: stackoverflowexception.p (170, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (170, 20): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (170, 22): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (170, 25): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (170, 28): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (172, 5): inferred type:  NIL
OUT: stackoverflowexception.p (172, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (172, 7): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (172, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (172, 13): inferred type:  TupType(BaseType(INT), TupType(BaseType(INT), NIL))
OUT: stackoverflowexception.p (172, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (172, 15): inferred type:  TupType(BaseType(INT), NIL)
OUT: stackoverflowexception.p (173, 5): inferred type:  NIL
OUT: stackoverflowexception.p (173, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (173, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (173, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (173, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (173, 21): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (173, 24): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (174, 5): inferred type:  NIL
OUT: stackoverflowexception.p (174, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (174, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (174, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (174, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (174, 21): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (174, 24): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (175, 5): inferred type:  NIL
OUT: stackoverflowexception.p (175, 14): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (175, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (175, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (175, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (175, 21): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (175, 24): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (177, 5): inferred type:  NIL
OUT: stackoverflowexception.p (177, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (177, 21): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (177, 23): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (177, 26): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (177, 29): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (179, 5): inferred type:  NIL
OUT: stackoverflowexception.p (179, 13): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (179, 15): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (179, 17): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (179, 20): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (180, 5): inferred type:  NIL
OUT: stackoverflowexception.p (180, 13): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (180, 15): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (180, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (180, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (180, 20): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (180, 23): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (181, 5): inferred type:  NIL
OUT: stackoverflowexception.p (181, 13): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (181, 15): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (181, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (181, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (181, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (181, 20): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (181, 23): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (181, 26): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (183, 5): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (183, 5): inferred type:  NIL
OUT: stackoverflowexception.p (183, 9): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (183, 10): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (183, 15): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (184, 5): inferred type:  NIL
OUT: stackoverflowexception.p (184, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (184, 7): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (184, 11): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (185, 5): inferred type:  NIL
OUT: stackoverflowexception.p (185, 13): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (185, 15): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (185, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (185, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (185, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (185, 20): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (185, 23): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (185, 26): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (186, 5): inferred type:  NIL
OUT: stackoverflowexception.p (186, 13): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (186, 15): inferred type:  MapType(BaseType(INT), SeqType(BaseType(INT)))
OUT: stackoverflowexception.p (186, 16): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (186, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (186, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (186, 20): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (186, 23): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (186, 26): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (189, 5): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (189, 5): inferred type:  NIL
OUT: stackoverflowexception.p (189, 7): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (189, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (189, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (190, 5): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (190, 5): inferred type:  NIL
OUT: stackoverflowexception.p (190, 7): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (190, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (190, 13): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (191, 5): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (191, 5): inferred type:  NIL
OUT: stackoverflowexception.p (191, 7): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (191, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (191, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (192, 5): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (192, 5): inferred type:  NIL
OUT: stackoverflowexception.p (192, 7): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (192, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (192, 13): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (193, 5): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (193, 5): inferred type:  NIL
OUT: stackoverflowexception.p (193, 9): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (193, 14): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (193, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (193, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (194, 5): inferred type:  NIL
OUT: stackoverflowexception.p (194, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (194, 15): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (194, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (195, 5): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (195, 5): inferred type:  NIL
OUT: stackoverflowexception.p (195, 9): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (195, 14): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (195, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (195, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (196, 5): inferred type:  NIL
OUT: stackoverflowexception.p (196, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (196, 15): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (196, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (198, 5): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (198, 5): inferred type:  NIL
OUT: stackoverflowexception.p (198, 10): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (199, 5): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (199, 5): inferred type:  NIL
OUT: stackoverflowexception.p (199, 7): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (199, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (199, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (201, 5): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (201, 5): inferred type:  NIL
OUT: stackoverflowexception.p (201, 7): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (201, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (201, 13): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (202, 5): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (202, 5): inferred type:  NIL
OUT: stackoverflowexception.p (202, 7): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (202, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (202, 13): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (203, 5): inferred type:  NIL
OUT: stackoverflowexception.p (203, 13): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (203, 15): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (203, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (203, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (203, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (203, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (203, 25): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (203, 27): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (203, 28): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (203, 30): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (203, 31): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (204, 5): inferred type:  NIL
OUT: stackoverflowexception.p (204, 13): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (204, 15): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (204, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (204, 18): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (204, 19): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (204, 22): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (204, 25): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (204, 27): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (204, 28): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (204, 30): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (204, 31): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (206, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (206, 11): inferred type:  NIL
OUT: stackoverflowexception.p (206, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (207, 5): inferred type:  NIL
OUT: stackoverflowexception.p (207, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (207, 14): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (207, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (209, 9): inferred type:  NIL
OUT: stackoverflowexception.p (209, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (209, 15): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (209, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (209, 23): inferred type:  NIL
OUT: stackoverflowexception.p (209, 30): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (209, 32): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (209, 33): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (209, 35): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (209, 36): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (209, 39): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (209, 42): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (209, 44): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (209, 45): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (209, 47): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (209, 48): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (210, 15): inferred type:  NIL
OUT: stackoverflowexception.p (210, 22): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (210, 24): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (210, 25): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (210, 27): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (210, 28): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (210, 31): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (210, 34): inferred type:  MapType(BaseType(INT), MapType(BaseType(INT), BaseType(ANY)))
OUT: stackoverflowexception.p (210, 36): inferred type:  MapType(BaseType(INT), BaseType(ANY))
OUT: stackoverflowexception.p (210, 37): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (210, 39): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (210, 40): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (211, 6): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (211, 6): inferred type:  NIL
OUT: stackoverflowexception.p (211, 10): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (211, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (211, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (216, 5): inferred type:  NIL
OUT: stackoverflowexception.p (216, 5): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (216, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (216, 12): inferred type:  TupType(BaseType(INT), TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL))
OUT: stackoverflowexception.p (216, 15): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (216, 15): inferred type:  TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL)
OUT: stackoverflowexception.p (216, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (216, 19): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (216, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (217, 5): inferred type:  NIL
OUT: stackoverflowexception.p (217, 5): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (217, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (217, 12): inferred type:  TupType(BaseType(INT), TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL))
OUT: stackoverflowexception.p (217, 15): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (217, 15): inferred type:  TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL)
OUT: stackoverflowexception.p (217, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (217, 19): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (217, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (218, 5): inferred type:  NIL
OUT: stackoverflowexception.p (218, 5): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (218, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (218, 12): inferred type:  TupType(BaseType(INT), TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL))
OUT: stackoverflowexception.p (218, 16): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (218, 16): inferred type:  TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL)
OUT: stackoverflowexception.p (218, 18): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (218, 20): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (218, 22): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (220, 5): inferred type:  NIL
OUT: stackoverflowexception.p (220, 5): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (220, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (220, 12): inferred type:  TupType(BaseType(INT), TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL))
OUT: stackoverflowexception.p (220, 15): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (220, 15): inferred type:  TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL)
OUT: stackoverflowexception.p (220, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (220, 19): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (220, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (221, 5): inferred type:  NIL
OUT: stackoverflowexception.p (221, 5): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (221, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (221, 12): inferred type:  TupType(BaseType(INT), TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL))
OUT: stackoverflowexception.p (221, 15): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (221, 15): inferred type:  TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL)
OUT: stackoverflowexception.p (221, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (221, 19): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (221, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (222, 5): inferred type:  NIL
OUT: stackoverflowexception.p (222, 5): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (222, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (222, 12): inferred type:  TupType(BaseType(INT), TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL))
OUT: stackoverflowexception.p (222, 15): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (222, 15): inferred type:  TupType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)), NIL)
OUT: stackoverflowexception.p (222, 17): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (222, 19): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (222, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (224, 5): inferred type:  MapType(BaseType(BOOL), SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))))
OUT: stackoverflowexception.p (224, 5): inferred type:  NIL
OUT: stackoverflowexception.p (224, 7): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (224, 8): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (224, 16): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (225, 5): inferred type:  MapType(BaseType(BOOL), SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))))
OUT: stackoverflowexception.p (225, 5): inferred type:  NIL
OUT: stackoverflowexception.p (225, 7): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (225, 8): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (225, 17): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (227, 5): inferred type:  NIL
OUT: stackoverflowexception.p (227, 13): inferred type:  MapType(BaseType(BOOL), SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))))
OUT: stackoverflowexception.p (227, 15): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (227, 16): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (227, 21): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (227, 22): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (227, 25): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (227, 29): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (227, 31): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (227, 33): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (227, 35): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (228, 5): inferred type:  NIL
OUT: stackoverflowexception.p (228, 13): inferred type:  MapType(BaseType(BOOL), SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))))
OUT: stackoverflowexception.p (228, 15): inferred type:  SeqType(NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)))
OUT: stackoverflowexception.p (228, 16): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (228, 22): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (228, 23): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (228, 26): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (228, 30): inferred type:  NmdTupType(NmdTupTypeField("a", BaseType(INT)), NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL))
OUT: stackoverflowexception.p (228, 32): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (228, 34): inferred type:  NmdTupType(NmdTupTypeField("b", BaseType(INT)), NIL)
OUT: stackoverflowexception.p (228, 36): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (233, 11): inferred type:  NIL
OUT: stackoverflowexception.p (233, 11): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (233, 14): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (233, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (233, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (233, 21): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (233, 22): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (233, 27): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (234, 5): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (234, 5): inferred type:  NIL
OUT: stackoverflowexception.p (234, 11): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (235, 5): inferred type:  NIL
OUT: stackoverflowexception.p (235, 5): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (235, 12): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (252, 5): inferred type:  NIL
OUT: stackoverflowexception.p (252, 11): inferred type:  BaseType(EVENT)
OUT: stackoverflowexception.p (258, 8): inferred type:  NIL
OUT: stackoverflowexception.p (258, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (263, 9): inferred type:  NIL
OUT: stackoverflowexception.p (263, 16): inferred type:  NmdTupType(NmdTupTypeField("a", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("b", MapType(BaseType(INT), SeqType(BaseType(INT)))), NIL))
OUT: stackoverflowexception.p (268, 8): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (268, 8): inferred type:  NIL
OUT: stackoverflowexception.p (268, 12): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (268, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (268, 16): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (269, 8): inferred type:  NIL
OUT: stackoverflowexception.p (269, 15): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (277, 7): inferred type:  NIL
OUT: stackoverflowexception.p (277, 7): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (277, 12): inferred type:  BaseType(ANY)
OUT: stackoverflowexception.p (277, 20): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (278, 4): inferred type:  NIL
OUT: stackoverflowexception.p (278, 11): inferred type:  SeqType(BaseType(INT))
OUT: stackoverflowexception.p (278, 13): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (278, 14): inferred type:  BaseType(INT)
OUT: stackoverflowexception.p (278, 17): inferred type:  BaseType(BOOL)
OUT: stackoverflowexception.p (278, 20): inferred type:  BaseType(INT)
OUT: 
EXIT: 0
