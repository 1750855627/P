=================================
         Console output          
=================================
OUT: boundedchoice_1.p (6, 4): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (6, 4): inferred type:  NIL
OUT: boundedchoice_1.p (6, 8): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (7, 4): inferred type:  NIL
OUT: boundedchoice_1.p (7, 10): inferred type:  BaseType(EVENT)
OUT: boundedchoice_1.p (14, 4): inferred type:  ERROR
OUT: boundedchoice_1.p (14, 4): inferred type:  NIL
OUT: boundedchoice_1.p (14, 7): inferred type:  ERROR
OUT: boundedchoice_1.p (16, 5): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (16, 5): inferred type:  NIL
OUT: boundedchoice_1.p (16, 9): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (16, 11): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (16, 13): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (20, 5): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (20, 5): inferred type:  NIL
OUT: boundedchoice_1.p (20, 9): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (22, 4): inferred type:  NIL
OUT: boundedchoice_1.p (22, 11): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (22, 13): inferred type:  BaseType(BOOL)
OUT: boundedchoice_1.p (22, 16): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (23, 4): inferred type:  NIL
OUT: boundedchoice_1.p (23, 7): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (23, 9): inferred type:  BaseType(BOOL)
OUT: boundedchoice_1.p (23, 11): inferred type:  BaseType(INT)
OUT: boundedchoice_1.p (24, 5): inferred type:  NIL
OUT: boundedchoice_1.p (24, 10): inferred type:  BaseType(REAL)
OUT: boundedchoice_1.p (24, 16): inferred type:  BaseType(EVENT)
OUT: boundedchoice_1.p (28, 3): inferred type:  NIL
OUT: boundedchoice_1.p (14, 4): "if (...)" expects a boolean value
OUT: boundedchoice_1.p (14, 7): Nondeterminitistic choice can be used only in model machine and model functions
OUT: Compilation failed
OUT: 
EXIT: -1
