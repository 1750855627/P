- dual mode Ctxt's
- move convenience fMkCnst, fMkFuncTerm ... terms into Domains, and rename
    all the Factory.Instane.Mk... calls to use those.
- TODOs throught the code base
- clean up old code in Compliler.cs that uses some flavour of AddArgs(...) to newly created convenience functions. E.g.
    - MkZingReturn()
    - MkZingIf()
    - MkIf()
    - MkBinApp()
    - MkNeq
    - MkCastToULONGPTR
    - MkCastFromULONGPTR
    - MkCnst
    

- Try to convert as many instances as possible of MkZingAssign(Ast<Node>, Ast<node>) to MkZingAssignOrCast(Ast<Node>, Ptype, Ast<node>, PType)

- PCompiler will crash on a machine with no states
- go thorough all the emitted variables in runHelper/actionHelper in zing
  and see if:
    - they are neccessary
    - they are properly zeroed out after use

- Handle 'if (*) { }' correctly. Currently we just disallow
  it in real machines, to prevent implicit flows. However, we can actually
allow it, as long as we can enforce the rule that if a break condition is
ghost, so are the possible target blocks. This is tricky, since when the
erasability of the then/else branches is computed, it is not aware that it is
in the context of an "if", or whether its conditional is ghost.

- rename StackFrame to ContinuationFrame

- what do we do about non-void foreign functions that dont always return something?
  Should we enforce that all paths return a value? E.g. one of the bool functions in OSR doesn't always return a value
