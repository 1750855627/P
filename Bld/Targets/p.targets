<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <UnifiedPlatform>$(Platform)</UnifiedPlatform>
    <!-- C++ projects use "Win32" for "x86" platform and .NET projects use 'x86' -->
    <!-- So this new property unifies that difference and moves everything to 'x86' -->
    <UnifiedPlatform Condition="'$(Platform)'=='Win32'">x86</UnifiedPlatform>
    <DropFolder>$(MSBuildThisFileDirectory)..\Drops\$(Configuration)\$(UnifiedPlatform)</DropFolder>
    <CleanDependsOn>$(CleanDependsOn);CleanSdkHeaders;CleanClientFiles;CleanCompileP</CleanDependsOn>
  </PropertyGroup>

  <!-- Invoke pc.exe - pc.exe will do the right thing based on which p files (or include files) have actually changed. -->
  <Target Name="CompileP" Inputs="@(PCompile);"
          Outputs="@(PCompile->'%(RootDir)%(Directory)%(FileName).4ml');@(PCompile->'%(RootDir)%(Directory)%(FileName).c');@(PCompile->'%(RootDir)%(Directory)%(FileName).h')"
          BeforeTargets="BeforeBuildGenerateSources" >

    <PropertyGroup>
      <WorkingDirs>@(PCompile->'%(RootDir)%(Directory)')</WorkingDirs>
      <WorkingDir>$(WorkingDirs.Split(';')[0])</WorkingDir>
    </PropertyGroup>

    <ItemGroup>
      <PLink Include="@(PCompile->'%(RootDir)%(Directory)\%(FileName).4ml')"/>
      <ClCompile Include="@(PCompile->'%(RootDir)%(Directory)%(FileName).c')"/>
    </ItemGroup>

      <ItemGroup>
        <FileWrites Include="@(PCompile->'%(RootDir)%(Directory)%(FileName).4ml')" />
        <FileWrites Include="@(PCompile->'%(RootDir)%(Directory)%(FileName).c')" />
        <FileWrites Include="@(PCompile->'%(RootDir)%(Directory)%(FileName).h')" />
      </ItemGroup>

      <Message Importance="high" Text="########## compiling p files @(PCompile)  ##################" />
      <Exec Command="$(DropFolder)\Binaries\pc.exe /generate:C0 /shared @(PCompile->'%(FullPath)',' ')"  WorkingDirectory="$(WorkingDir)"/>
      <Message Importance="high" Text="########## compiling p files complete ##################" />

    </Target>

  <Target Name="LinkP" Inputs="@(PLink);" Outputs="%(RootDir)%(Directory)linker.c;%(RootDir)%(Directory)linker.c"
          DependsOnTargets="CompileP" BeforeTargets="BeforeBuildGenerateSources" >
    <PropertyGroup>
      <WorkingDirs>@(PLink->'%(RootDir)%(Directory)')</WorkingDirs>
      <WorkingDir>$(WorkingDirs.Split(';')[0])</WorkingDir>
    </PropertyGroup>
    <ItemGroup>
      <FileWrites Include="$(WorkingDir)linker.c" />
      <FileWrites Include="$(WorkingDir)linker.c" />
    </ItemGroup>
    <!-- must always include linker.c in the final C++ compile -->
    <CreateItem Include="$(WorkingDir)linker.c">
      <Output
          TaskParameter="Include"
          ItemName="ClCompile"/>
    </CreateItem>

    <Message Importance="high" Text="########## generating p linker.c  ##################" />
    <Exec Command="$(DropFolder)\Binaries\pc.exe /link @(PLink->'%(FullPath)',' ')"  WorkingDirectory="$(WorkingDir)"/>
    <Message Importance="high" Text="########## generating p linker complete ##################" />
  </Target>

  <Target Name="CleanCompileP" Condition="'@(PCompile)' != ''" >
    <PropertyGroup>
      <WorkingDirs>@(PCompile->'%(RootDir)%(Directory)')</WorkingDirs>
      <WorkingDir>$(WorkingDirs.Split(';')[0])</WorkingDir>
    </PropertyGroup>
    <Delete Files="@(PCompile->'$(WorkingDir)\%(FileName).c')"/>
    <Delete Files="@(PCompile->'$(WorkingDir)\%(FileName).h')"/>
    <Delete Files="@(PCompile->'$(WorkingDir)\%(FileName).4ml')"/>
    <Delete Files="$(WorkingDir)\linker.c"/>
    <Delete Files="$(WorkingDir)\linker.h"/>
  </Target>

  <Target Name="CopySdkHeaders" Inputs="@(ClInclude)"  Outputs="$(DropFolder)\Headers\%(Filename)" BeforeTargets="PrepareForBuild">
    <CreateItem Include="@(ClInclude)" Condition="'%(ClInclude.CopyToHeaders)'=='True'" >
      <Output TaskParameter="Include" ItemName="SdkHeaders"/>
    </CreateItem>
    <Copy SourceFiles="@(SdkHeaders)" DestinationFolder="$(DropFolder)\Headers" />
  </Target>

  <Target Name="CleanSdkHeaders">
    <CreateItem Include="@(ClInclude)" Condition="'%(ClInclude.CopyToHeaders)'=='True'" >
      <Output TaskParameter="Include" ItemName="SdkHeaders"/>
    </CreateItem>
    <Delete Files="@(SdkHeaders->'$(DropFolder)\Headers\%(Filename)%(Extension)')"/>
  </Target>

  <Target Name="CopyClientFiles" Inputs="@(ClientFile)"  Outputs="$(DropFolder)\ClientFiles\%(Filename)" BeforeTargets="PrepareForBuild">
    <Copy SourceFiles="@(ClientFile)" DestinationFolder="$(DropFolder)\ClientFiles" />
  </Target>

  <Target Name="CleanClientFiles">
    <Delete Files="@(ClientFile->'$(DropFolder)\ClientFiles\%(Filename)%(Extension)')" />
  </Target>
</Project>
